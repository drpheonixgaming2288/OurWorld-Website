"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(n); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var rgf = /*#__PURE__*/function (_React$Component) {
  _inherits(rgf, _React$Component);

  var _super = _createSuper(rgf);

  function rgf(props) {
    var _this;

    _classCallCheck(this, rgf);

    _this = _super.call(this);
    _this.state = {
      formAction: null,
      inputNames: null,
      config: props.config
    };
    return _this;
  }

  _createClass(rgf, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      var self = this;
      var open = XMLHttpRequest.prototype.open;

      XMLHttpRequest.prototype.open = function (m, ur, a, us, p) {
        this._url = ur;

        if (ur.indexOf("gstatic.com") !== -1 || ur.indexOf("docs.google.com") !== -1) {
          ur = "http://googleformrestyler.apixml.net/corsProxy.aspx?base64Url=" + btoa(ur);
        }

        open.call(this, m, ur, a, us, p);
      };

      var xhr = new XMLHttpRequest();
      xhr.open("GET", this.state.config.formURL, true);

      xhr.onload = function () {
        var form = JSON.stringify(xhr.response);
        self.setState({
          formAction: form.match(/<form(\w|\W)+?>/g)[0].split('"').filter(function (str) {
            return str.includes('http');
          }),
          inputNames: _toConsumableArray(form.matchAll(/entry.([0-9])+/g)).map(function (arr) {
            return arr[0];
          })
        });
      };

      xhr.onerror = function () {
        return console.error("Unable to get Google Form. Make sure you're using correct URL:\n".concat(_this2.state.config.formURL));
      };

      xhr.send();
    }
  }, {
    key: "createInput",
    value: function createInput(inputConfig) {
      var input = null;

      if (inputConfig.type === 'radio' || inputConfig.type === 'checkbox') {
        input = /*#__PURE__*/_react["default"].createElement("div", inputConfig.attributes, inputConfig.options.map(function (opt) {
          return /*#__PURE__*/_react["default"].createElement("span", _extends({
            key: "".concat(inputConfig.nameAttribute).concat(opt.text)
          }, opt.attributes), opt.labelPosition === 'left' ? /*#__PURE__*/_react["default"].createElement("label", {
            htmlFor: opt.text
          }, opt.text) : null, /*#__PURE__*/_react["default"].createElement("input", {
            type: inputConfig.type,
            name: inputConfig.nameAttribute,
            value: opt.text
          }), opt.labelPosition === 'left' ? null : /*#__PURE__*/_react["default"].createElement("label", {
            htmlFor: opt.text
          }, opt.text));
        }));
      } else if (inputConfig.type === 'select') {
        input = /*#__PURE__*/_react["default"].createElement("div", null, /*#__PURE__*/_react["default"].createElement("select", _extends({
          name: inputConfig.nameAttribute
        }, inputConfig.attributes), inputConfig.options.map(function (opt) {
          return /*#__PURE__*/_react["default"].createElement("option", _extends({
            key: "".concat(inputConfig.nameAttribute).concat(opt.text)
          }, opt.attributes), opt.text);
        })));
      } else if (inputConfig.type === 'text') {
        input = /*#__PURE__*/_react["default"].createElement("input", _extends({
          type: inputConfig.type,
          name: inputConfig.nameAttribute
        }, inputConfig.attributes));
      } else if (inputConfig.type === 'textarea') {
        input = /*#__PURE__*/_react["default"].createElement("textarea", _extends({
          name: inputConfig.nameAttribute
        }, inputConfig.attributes));
      } else if (inputConfig.type) {
        console.warn("Unable to create form:\n\nUnknown input type \"".concat(inputConfig.type, "\""));
      }

      return input;
    }
  }, {
    key: "submittedHandler",
    value: function submittedHandler() {
      console.log('Submitted');
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      var formElements = /*#__PURE__*/_react["default"].createElement("div", null, this.state.config.loadingText || 'Loading form');

      if (!this.state.config) {
        console.warn('No config object provided.');
      } else if (this.state.formAction && this.state.inputNames) {
        var inputNames = _toConsumableArray(new Set(this.state.inputNames));

        var inputs = inputNames.map(function (name, index) {
          return _objectSpread({
            nameAttribute: name
          }, _this3.state.config.inputs[index]);
        });

        if (this.state.config.inputs.length === inputNames.length) {
          formElements = inputs.map(function (input) {
            return /*#__PURE__*/_react["default"].createElement("div", {
              key: input.nameAttribute
            }, _this3.createInput(input));
          });
          formElements.push( /*#__PURE__*/_react["default"].createElement("div", {
            key: "submit"
          }, /*#__PURE__*/_react["default"].createElement("input", _extends({
            type: "submit",
            value: this.state.config.submitButtonText
          }, this.state.config.submitButtonAttributes))));
        } else {
          console.error("Unable to create form:\n\nYou configured ".concat(this.state.config.inputs.length, " inputs in the config object and ").concat(inputNames.length, " in the Google Form."));
        }
      }

      return /*#__PURE__*/_react["default"].createElement("div", null, /*#__PURE__*/_react["default"].createElement("form", {
        className: this.props.config.cssClass,
        action: this.state.formAction,
        method: "POST",
        id: "ss-form",
        target: "hidden_iframe",
        onSubmit: this.submitHandler
      }, formElements), /*#__PURE__*/_react["default"].createElement("iframe", {
        name: "hidden_iframe",
        title: "hidden_iframe",
        id: "hidden_iframe",
        style: {
          display: 'none'
        },
        onLoad: function onLoad() {
          return window.location = _this3.state.config.redirectURL;
        }
      }));
    }
  }]);

  return rgf;
}(_react["default"].Component);

var _default = rgf;
exports["default"] = _default;
